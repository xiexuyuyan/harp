plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.4.20"
    id "org.jetbrains.kotlin.kapt" version "1.5.31"
}

repositories {
    mavenCentral()
    flatDir{
        dirs 'libs'
    }
}

version "0.0.1"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    compileOnly "org.yuyan.room:room:0.0.1-alpha"
    compileOnly "droid:runtime:0.0.1-alpha"
    compileOnly "org.yuyan.room.annotation.processor:room-annotation-processor:0.0.1-alpha"
    kapt "org.yuyan.room.annotation.processor:room-annotation-processor:0.0.1-alpha"

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

    // https://mvnrepository.com/artifact/com.squareup/javapoet
    implementation group: 'com.squareup', name: 'javapoet', version: '1.11.1'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

sourceSets {
    main {
        java['srcDirs'] = ['src']
        resources['srcDirs'] = ['res']
    }
    test {
        java['srcDirs'] = ['test/src']
        resources['srcDirs'] = ['test/res']
    }
}

jar {
//    project.version = new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+08:00"))

    archiveClassifier.convention("alpha")
    archiveClassifier.set("alpha")
    manifest.attributes.put('Manifest-Version', project.version)
    destinationDirectory.set(file("../Vicar/out/app/" + "com.yuyan.harp"))

    doLast {
        println archiveFile.get()
        println "jar tf ${archiveFile.get()}".execute().text.trim()
    }
}